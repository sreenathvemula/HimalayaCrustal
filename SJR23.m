function [Sa, T, Sigma, SingleStation] = SJR23(Mw, RJB, siteclass, depth, Flag, T)
% Written by Vemula Sreenath, Jahnabi Basu, S.T.G. Raghukanth
% REf: Ground Motion Models for Regions With Limited Data: Data-Driven Approach
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input Variables
% Mw = Magnitude
% T = Period (sec); Use Period = 1000 to output the array of median with original period
%                 (no interpolation)
% RJB = Joyner-Boore Distance (km)
% depth = Hypocentral depth (km)
% 
%*********************ref for site class**********************************%
% Site Class                    ID
% A (Vs30 > 700m/s)              1
% B (375 < Vs30 < 700m/s)        2
% C (Vs30 < 375m/s)              3
%*********************ref for record component****************************%
% Flag                          ID
% Horizontal RotD50              0
% Vertical                       1

% Output Variables
% median        = Median amplitude prediction in g for PGA and PSA
% sigma         = log standard deviation
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ===== GMPE =====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    T1 = [0,0.01,0.015,0.02,0.03,0.04,0.05,0.06,0.075,0.09,0.1,0.15,0.2,0.3,0.4,0.5,0.6,0.7,...
        0.75,0.8,0.9,1,1.2,1.5,2,2.5,3,4,5];
    Input = [Mw RJB log(RJB) siteclass depth Flag];
    mean_input = [5.1331  123.0176    4.4519    1.9946   10.6227    0.4977];
    std_input = [1.0628   92.5350    0.9656    0.7780    4.9495    0.5000];
    mean_target = [-6.4004,-6.3944,-6.3809,-6.3683,-6.3041,-6.2174,-6.1215,-6.0276,-5.9143,...
        -5.8254,-5.7791,-5.6533,-5.6427,-5.7415,-5.8979,-6.0616,-6.2214,-6.3684,-6.4414,...
        -6.5122,-6.6476,-6.7768,-7.0162,-7.3254,-7.7894,-8.1612,-8.4644,-8.9519,-9.3401];
    std_target = [2.4714,2.4724,2.4755,2.4788,2.4991,2.5314,2.5603,2.5739,2.5839,2.5781,...
        2.5739,2.5109,2.4541,2.3885,2.3551,2.3451,2.3463,2.356,2.3618,2.3671,2.3822,2.3981,...
        2.4346,2.4847,2.5642,2.6216,2.6736,2.7488,2.8074];

    Nor_Input = (Input-mean_input)./std_input;
    Nor_Predict = ResponseFunction(Nor_Input')';
    Sa = Nor_Predict.*std_target+mean_target;
    Sa(:,1:end) = exp(Sa(:,1:end));

    tau_H =[0.4115,0.4114,0.4088,0.4045,0.4129,0.4438,0.4604,0.4427,0.4405,0.4587,0.4566,0.5601,0.6252,0.6513,...
        0.6696,0.6875,0.6497,0.6257,0.6318,0.6163,0.5848,0.5564,0.5253,0.5042,0.4969,0.5042,0.4974,0.4575,0.4388];
    tau_V =[0.4888,0.4862,0.4795,0.4750,0.4870,0.4814,0.4644,0.4616,0.4988,0.5637,0.5486,0.6298,0.7217,0.7290,...
        0.7428,0.8169,0.8415,0.8175,0.8035,0.7902,0.7836,0.7840,0.7603,0.7016,0.7040,0.6604,0.6482,0.6634,0.6423];
    phi_s2s_H = [0.3479,0.3461,0.3433,0.3427,0.3515,0.3548,0.3436,0.3444,0.3546,0.3387,0.3316,0.3278,0.3291,0.3763,...
        0.3513,0.3494,0.3647,0.3663,0.3680,0.3664,0.3627,0.3662,0.3636,0.3752,0.3852,0.4024,0.3835,0.3689,0.3278];
    phi_s2s_V = [0.3723,0.3735,0.3750,0.3761,0.3963,0.4087,0.4281,0.4172,0.3761,0.3541,0.3450,0.2884,0.2739,0.3151,...
        0.2970,0.2905,0.2854,0.2889,0.2885,0.2963,0.2845,0.2612,0.2519,0.2648,0.2842,0.2828,0.2719,0.2750,0.2702];
    phi_ss_H = [0.4334,0.4309,0.4297,0.4274,0.4310,0.4356,0.4430,0.4387,0.4289,0.4206,0.4276,0.4407,0.4633,0.4876,...
        0.4858,0.4854,0.5019,0.5115,0.4999,0.5018,0.5096,0.5138,0.5193,0.5423,0.5558,0.5653,0.5689,0.5839,0.5762];
    phi_ss_V = [0.4588,0.4584,0.4622,0.4650,0.4872,0.4717,0.4881,0.4913,0.4697,0.4482,0.4455,0.4688,0.4617,0.4805,...
        0.4829,0.4817,0.4757,0.4878,0.4889,0.5081,0.5016,0.4903,0.4873,0.5066,0.5041,0.5164,0.5177,0.5130,0.5128];
    Sigma_H = sqrt(tau_H.^2+phi_ss_H.^2+phi_s2s_H.^2); SingleStation_H = sqrt(tau_H.^2+phi_ss_H.^2);
    Sigma_V = sqrt(tau_V.^2+phi_ss_V.^2+phi_s2s_V.^2); SingleStation_V = sqrt(tau_V.^2+phi_ss_V.^2);

    if T == 1000
        T = T1;
    else
        Sa=interp1(T1,Sa,T); %response spectrum
        if Flag == 0; Sigma=interp1(T1,Sigma_H,T); SingleStation=interp1(T1,SingleStation_H,T); end
        if Flag == 1; Sigma=interp1(T1,Sigma_V,T); SingleStation=interp1(T1,SingleStation_V,T);  end
    end
end

function y1=ResponseFunction(x1)

    % ===== NEURAL NETWORK CONSTANTS =====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % Layer 1
    b1 = [-0.016214548;1.5194718;-0.15238546;0.21469273;-0.15394871;-0.41111153];
    W1 = [0.48526493,0,-0.11351008,0.081407771,0.021409884,-0.089227021;0.0012183900,-0.19909017,-0.68534428,0.28056166,0.038456824,0.086963028;0.22771764,-0.030561268,-0.26511657,0.0017466636,0.039426211,-0.019703159;0.42613921,-0.0026135957,-0.69048357,0.20899189,2.2612331,-0.21064273;0.21010275,-0.014003823,-0.24735823,0.00035957745,0.066706404,-0.0049202065;0.63742012,0,-0.00018096252,0.0013432747,0.099799789,0.017550064];

    % Layer 2
    b2 = [0.082246251;0.022317551;-0.15604369;0.021284668;-0.015788326;-0.19604802];
    W2 = [0.76506728,0.0019241006,0.055452604,0.051543280,0.0075715631,0.014639030;0.00012394262,0.0050544525,0.40783173,0.0096308803,0.17158790,0.0060339225;0.44034368,0.0011486384,0.029871842,0.0022491643,0.028326295,0.56032509;0,0.0037828994,0.27656209,0.0080840448,0.38725689,0.0067235082;0,0.040377963,0.17406453,0.072570339,0.27865496,0.0049000815;0.19916001,0.0015685037,0,0.0026451855,0,1.0743953];

    % Layer 3
    b3 = [0.20947602;0.031137288;-0.023015419;0.20905551;0.28057310;-0.23272170];
    W3 = [0.00048334309,0.50338304,0.0056526940,0.50563711,0.0029869461,0.0079268450;1.3421998,0.048428316,0.023948792,0.022167258,0.027424132,0.026081536;0.59599131,0.051692151,0.56195194,0.23153540,0.0061441776,0.16851714;0,0.39667079,0.0047570150,0.51788360,0.11686122,0.0068071252;0,0.20313478,0.0031866105,0.17154877,0.69245696,0.0052371668;0.0068327207,8.3998973e-05,1.3417493,0.00013385924,8.3054001e-05,1.6178622];

    % Layer 4
    b4 = [0.33658582;0.35142070;0.35341957;0.36589721;0.38868204;0.38787258;0.37513608;0.35084075;0.32599068;0.30576724;0.28926918;0.24792211;0.21868978;0.14687501;0.13374613;0.11940382;0.12839389;0.14620258;0.15756726;0.16892165;0.18733707;0.19704714;0.23928471;0.29340401;0.35508454;0.40675065;0.46699321;0.53084499;0.56470555];
    W4 = [0.61859065,0.034539532,0.0039560809,0.62092924,0.61581999,0.29133359;0.62178046,0.019569101,0.0044459710,0.62173164,0.61259216,0.30049133;0.63357419,0.0093708113,0.0043381271,0.62596691,0.60817593,0.29636008;0.63558006,0.0014155587,0.0040675574,0.62380129,0.59518391,0.28849262;0.64486766,0,0.00080721593,0.61945784,0.56635404,0.23560815;0.65630674,0,0,0.63208753,0.54936230,0.19626981;0.64198947,0,0,0.64761442,0.56530488,0.17279167;0.60956401,0,5.8839796e-05,0.65277445,0.61744964,0.17941539;0.57572496,0,0.00079621578,0.66595072,0.66734451,0.19005044;0.54819685,0.0080814427,0.0036454550,0.66387391,0.70032781,0.21521956;0.50748461,0.084627815,0.0059337267,0.63566935,0.69084328,0.21145199;0.37612882,0.37429452,0.096120343,0.51367772,0.65553463,0.16003835;0.29588300,0.54157579,0.17052223,0.42536885,0.61383843,0.15246332;0.27826658,0.74425894,0.29590994,0.36337623,0.50688672,0.15420637;0.27994040,0.78324962,0.38271552,0.30268842,0.40616575,0.19336638;0.29547587,0.79696816,0.44492525,0.27666157,0.33512336,0.21116394;0.28658634,0.75746042,0.47488886,0.26358122,0.30398527,0.26301858;0.26631743,0.75086027,0.51058018,0.21565565,0.23290251,0.27796161;0.27546653,0.71896642,0.53677416,0.20790000,0.20195553,0.29262921;0.27034223,0.70626396,0.55502313,0.19194329,0.18035424,0.30567309;0.27436149,0.68680245,0.56709665,0.17862152,0.14324224,0.34089065;0.28023860,0.66783530,0.58011949,0.16331771,0.10685135,0.36250350;0.29109696,0.60135245,0.61267489,0.14530812,0.047500126,0.40010953;0.27062011,0.53078222,0.63888144,0.088687308,0.0023197387,0.43275523;0.30603135,0.37952334,0.62075990,0.027388437,0.00022306567,0.49695599;0.33393127,0.27497089,0.57605171,0.0010322721,0.00098922395,0.55815440;0.34002206,0.16028227,0.52616531,0.0011919310,0.0015334123,0.62645870;0.33275515,0.037020877,0.39850965,0.00091149984,0.0013821363,0.70699435;0.33080634,0.015682677,0.24026535,0.0010076676,0.0014615122,0.75932080];

    % ===== SIMULATION ========%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    % Dimensions
    Q = size(x1,2); % samples

    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + W1*x1);

    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + W2*a1);

    % Layer 3
    a3 = tansig_apply(repmat(b3,1,Q) + W3*a2);

    % Layer 4
    a4 = repmat(b4,1,Q) + W4*a3;

    % Output 1
    y1 = a4;
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
    a = 2 ./ (1 + exp(-2*n)) - 1;
end
